<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="dao.MessageMapper" >
  <resultMap id="BaseResultMap" type="entity.Message" >
    <id column="messageId" property="messageid" jdbcType="INTEGER" />
    <result column="nessageName" property="nessagename" jdbcType="VARCHAR" />
    <result column="messageEmail" property="messageemail" jdbcType="VARCHAR" />
    <result column="messageComment" property="messagecomment" jdbcType="VARCHAR" />
    <result column="messageTime" property="messagetime" jdbcType="DATE" />
    <result column="videoId" property="videoid" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    messageId, nessageName, messageEmail, messageComment, messageTime, videoId
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="entity.MessageExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from message
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from message
    where messageId = #{messageid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from message
    where messageId = #{messageid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="entity.MessageExample" >
    delete from message
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="entity.Message" >
    <selectKey resultType="java.lang.Integer" keyProperty="messageid" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into message (nessageName, messageEmail, messageComment, 
      messageTime, videoId)
    values (#{nessagename,jdbcType=VARCHAR}, #{messageemail,jdbcType=VARCHAR}, #{messagecomment,jdbcType=VARCHAR}, 
      #{messagetime,jdbcType=DATE}, #{videoid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="entity.Message" >
    <selectKey resultType="java.lang.Integer" keyProperty="messageid" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into message
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="nessagename != null" >
        nessageName,
      </if>
      <if test="messageemail != null" >
        messageEmail,
      </if>
      <if test="messagecomment != null" >
        messageComment,
      </if>
      <if test="messagetime != null" >
        messageTime,
      </if>
      <if test="videoid != null" >
        videoId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="nessagename != null" >
        #{nessagename,jdbcType=VARCHAR},
      </if>
      <if test="messageemail != null" >
        #{messageemail,jdbcType=VARCHAR},
      </if>
      <if test="messagecomment != null" >
        #{messagecomment,jdbcType=VARCHAR},
      </if>
      <if test="messagetime != null" >
        #{messagetime,jdbcType=DATE},
      </if>
      <if test="videoid != null" >
        #{videoid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="entity.MessageExample" resultType="java.lang.Integer" >
    select count(*) from message
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update message
    <set >
      <if test="record.messageid != null" >
        messageId = #{record.messageid,jdbcType=INTEGER},
      </if>
      <if test="record.nessagename != null" >
        nessageName = #{record.nessagename,jdbcType=VARCHAR},
      </if>
      <if test="record.messageemail != null" >
        messageEmail = #{record.messageemail,jdbcType=VARCHAR},
      </if>
      <if test="record.messagecomment != null" >
        messageComment = #{record.messagecomment,jdbcType=VARCHAR},
      </if>
      <if test="record.messagetime != null" >
        messageTime = #{record.messagetime,jdbcType=DATE},
      </if>
      <if test="record.videoid != null" >
        videoId = #{record.videoid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update message
    set messageId = #{record.messageid,jdbcType=INTEGER},
      nessageName = #{record.nessagename,jdbcType=VARCHAR},
      messageEmail = #{record.messageemail,jdbcType=VARCHAR},
      messageComment = #{record.messagecomment,jdbcType=VARCHAR},
      messageTime = #{record.messagetime,jdbcType=DATE},
      videoId = #{record.videoid,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="entity.Message" >
    update message
    <set >
      <if test="nessagename != null" >
        nessageName = #{nessagename,jdbcType=VARCHAR},
      </if>
      <if test="messageemail != null" >
        messageEmail = #{messageemail,jdbcType=VARCHAR},
      </if>
      <if test="messagecomment != null" >
        messageComment = #{messagecomment,jdbcType=VARCHAR},
      </if>
      <if test="messagetime != null" >
        messageTime = #{messagetime,jdbcType=DATE},
      </if>
      <if test="videoid != null" >
        videoId = #{videoid,jdbcType=INTEGER},
      </if>
    </set>
    where messageId = #{messageid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="entity.Message" >
    update message
    set nessageName = #{nessagename,jdbcType=VARCHAR},
      messageEmail = #{messageemail,jdbcType=VARCHAR},
      messageComment = #{messagecomment,jdbcType=VARCHAR},
      messageTime = #{messagetime,jdbcType=DATE},
      videoId = #{videoid,jdbcType=INTEGER}
    where messageId = #{messageid,jdbcType=INTEGER}
  </update>
  <select id="GetMes"   resultType="entity.Message">
   SELECT * FROM message WHERE videoId=#{0}  ORDER BY messageId  DESC   LIMIT 0,6
  
  </select>

</mapper>